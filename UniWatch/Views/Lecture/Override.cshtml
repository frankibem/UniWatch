@model UniWatch.ViewModels.Lecture.LectureViewModel

@{
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Override Lecture - @Model.LectureDate.ToShortDateString()</h2>
<hr />

@using (Html.BeginForm("Override", "Lecture", FormMethod.Post, new { model = Model })) {
    @Html.AntiForgeryToken()
    @Html.HiddenFor(model => model.LectureId);

    if (!Model.LectureItems.Any())
    {
        <h4>There is no attendance for this lecture</h4>
    }
    else
    {
        <table class="table table-striped">
            <thead>
            <tr>
                <th>Student</th>
                <th class="text-center">Attendance</th>
            </tr>
            </thead>
            <tbody>
            @for (var i = 0; i < Model.LectureItems.Count; i++)
            {
                <tr>
                    <td>
                        @{
                            var student = Model.Students.Find(s => s.Id == Model.LectureItems[i].StudentId);
                            var name = student != null ? string.Format($"{student.FirstName} {student.LastName}") : string.Empty;
                        }
                        @Html.ValueFor(model => name)
                    </td>
                    <td>
                        @Html.CheckBoxFor(model => model.LectureItems[i].Present)
                        @Html.HiddenFor(model => model.LectureItems[i].StudentId)
                        @Html.HiddenFor(model => model.LectureItems[i].LectureId)
                    </td>
                </tr>
            }
            </tbody>
        </table>

        <input type="submit" id="btnSubmit"/>
    }


    @Html.ActionLink("Back", "Index", "Lecture", new { classId = Model.ClassId }, null)
    @Html.ActionLink("Delete Lecture", "Delete", "Lecture", new { lectureId = Model.LectureId }, null)
}
